---
image: docker:stable
services:
  - docker:dind

stages:
  - check_images
  - build
  - containerization
  - quality

build_docker_images:
  stage: check_images
  needs:
    pipeline: FrancoisSevestre/dockerfiles

compilation_job:
  stage: build
  script:
    - docker run
        --volume "$PWD:/code"
        registry.gitlab.com/francoissevestre/dockerfiles/cmake
  artifacts:
    paths:
      - cninjatodola

code_quality_job:
  stage: quality
  allow_failure: true
  script:
    - mkdir codequality-results
    - docker run
        --env CODECLIMATE_CODE="$PWD"
        --volume "$PWD"/src:/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        --volume /tmp/cc:/tmp/cc
        codeclimate/codeclimate analyze -f html
        > ./codequality-results/index.html
  artifacts:
    paths:
      - codequality-results/

code_linting_job:
  stage: quality
  allow_failure: true
  script:
    - docker run
        --volume "$PWD"/src:/code
        registry.gitlab.com/francoissevestre/dockerfiles/cpplint > errors
        || echo "done"
  artifacts:
    paths:
      - src/linting_results

containerization_job:
  needs: ["compilation_job"]
  stage: containerization
  before_script:
    - echo $CI_BUILD_TOKEN |
      docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker build -t "$CI_REGISTRY_IMAGE/cninjatodola-archlinux" .
    - docker push "$CI_REGISTRY_IMAGE/cninjatodola-archlinux"

push_to_dockerhub_job:
  needs: ["compilation_job"]
  stage: containerization
  before_script:
    - echo "pushing image to $DOCKERHUB_USERNAME/cninjatodola-archlinux on hub"
    - echo "$DOCKERHUB_TOKEN" |
      docker login --username "$DOCKERHUB_USERNAME" --password-stdin
  script:
    - docker build -t "$DOCKERHUB_USERNAME/cninjatodola-archlinux" .
    - docker push "$DOCKERHUB_USERNAME/cninjatodola-archlinux"

building_report_job:
  stage: .pre
  script: |
     cat > report.md << EOF
     # CninjaTODOla CI/CD pipeline report
     $CI_JOB_STARTED_AT
     
     ... to be filled ...
