---
stages:
  - build
  - containerization
  - quality

compilation_job:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker run
        --volume "$PWD:/code"
        registry.gitlab.com/francoissevestre/dockerfiles/cmake
  artifacts:
    paths:
      - cninjatodola

code_quality_job:
  stage: quality
  image: docker:stable
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - mkdir codequality-results
    - docker run
        --env CODECLIMATE_CODE="$PWD"
        --volume "$PWD"/src:/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        --volume /tmp/cc:/tmp/cc
        codeclimate/codeclimate analyze -f html
        > ./codequality-results/index.html
  artifacts:
    paths:
      - codequality-results/

code_linting_job:
  stage: quality
  image: docker:latest
  allow_failure: true
  services:
    - docker:dind
  script:
    - docker run
        --volume "$PWD"/src:/code
        registry.gitlab.com/francoissevestre/dockerfiles/cpplint
        2> linting-errors.txt
        || echo "Linting errors found. See artifacts for more infos"
  artifacts:
    paths:
      - linting-errors.txt

package_job:
  needs: ["build"]
  image: docker:latest
  stage: containerization
  services:
    - docker:dind
  before_script:
    - echo $CI_BUILD_TOKEN |
      docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker build -t "$CI_REGISTRY_IMAGE/cninjatodola-archlinux" .
    - docker push "$CI_REGISTRY_IMAGE/cninjatodola-archlinux"
